Here is an intuitive approach to solve the problem before thinking about how to code it:

We know that there are supposely n + 1 total numbers but one number is missing and we need to find that missing number. This is because we know the range is [0, n].

For example, Input: nums = [3,0,1]
We know the range is 0, 1, 2, 3 and there are supposely 4 total numbers, but the given input only has 3 total numbers: 0, 1, 3.

Within this range 0 to n, each number should be unique and consecutive, so we can safely assume the sum of the suppose total numbers by iterating from 0 to n, and then compare it with the current input sum.

suppose sum = 0 + 1 + 2+ 3 = 6
current sum = 0 + 1 + 3 = 4
6 - 4 = 2

2 is the missing number in [0, 1, 3]

No sorting or hash map is required in this approach and you can achieve O(N) time and O(1) space.